//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------

namespace stockService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WebXml.com.cn/", ConfigurationName="stockService.ChinaStockWebServiceSoap")]
    public interface ChinaStockWebServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebXml.com.cn/getStockImageByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task getStockImageByCodeAsync(string theStockCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebXml.com.cn/getStockImageByteByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<stockService.getStockImageByteByCodeResponse> getStockImageByteByCodeAsync(stockService.getStockImageByteByCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebXml.com.cn/getStockImage_kByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task getStockImage_kByCodeAsync(string theStockCode, string theType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebXml.com.cn/getStockImage_kByteByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<stockService.getStockImage_kByteByCodeResponse> getStockImage_kByteByCodeAsync(stockService.getStockImage_kByteByCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WebXml.com.cn/getStockInfoByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> getStockInfoByCodeAsync(string theStockCode);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getStockImageByteByCode", WrapperNamespace="http://WebXml.com.cn/", IsWrapped=true)]
    public partial class getStockImageByteByCodeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WebXml.com.cn/", Order=0)]
        public string theStockCode;
        
        public getStockImageByteByCodeRequest()
        {
        }
        
        public getStockImageByteByCodeRequest(string theStockCode)
        {
            this.theStockCode = theStockCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getStockImageByteByCodeResponse", WrapperNamespace="http://WebXml.com.cn/", IsWrapped=true)]
    public partial class getStockImageByteByCodeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WebXml.com.cn/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getStockImageByteByCodeResult;
        
        public getStockImageByteByCodeResponse()
        {
        }
        
        public getStockImageByteByCodeResponse(byte[] getStockImageByteByCodeResult)
        {
            this.getStockImageByteByCodeResult = getStockImageByteByCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getStockImage_kByteByCode", WrapperNamespace="http://WebXml.com.cn/", IsWrapped=true)]
    public partial class getStockImage_kByteByCodeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WebXml.com.cn/", Order=0)]
        public string theStockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WebXml.com.cn/", Order=1)]
        public string theType;
        
        public getStockImage_kByteByCodeRequest()
        {
        }
        
        public getStockImage_kByteByCodeRequest(string theStockCode, string theType)
        {
            this.theStockCode = theStockCode;
            this.theType = theType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getStockImage_kByteByCodeResponse", WrapperNamespace="http://WebXml.com.cn/", IsWrapped=true)]
    public partial class getStockImage_kByteByCodeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WebXml.com.cn/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getStockImage_kByteByCodeResult;
        
        public getStockImage_kByteByCodeResponse()
        {
        }
        
        public getStockImage_kByteByCodeResponse(byte[] getStockImage_kByteByCodeResult)
        {
            this.getStockImage_kByteByCodeResult = getStockImage_kByteByCodeResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ChinaStockWebServiceSoapChannel : stockService.ChinaStockWebServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ChinaStockWebServiceSoapClient : System.ServiceModel.ClientBase<stockService.ChinaStockWebServiceSoap>, stockService.ChinaStockWebServiceSoap
    {
        
        /// <summary>
        /// 实现此分部方法，配置服务终结点。
        /// </summary>
        /// <param name="serviceEndpoint">要配置的终结点</param>
        /// <param name="clientCredentials">客户端凭据</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ChinaStockWebServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ChinaStockWebServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), ChinaStockWebServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ChinaStockWebServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ChinaStockWebServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ChinaStockWebServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ChinaStockWebServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ChinaStockWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task getStockImageByCodeAsync(string theStockCode)
        {
            return base.Channel.getStockImageByCodeAsync(theStockCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<stockService.getStockImageByteByCodeResponse> stockService.ChinaStockWebServiceSoap.getStockImageByteByCodeAsync(stockService.getStockImageByteByCodeRequest request)
        {
            return base.Channel.getStockImageByteByCodeAsync(request);
        }
        
        public System.Threading.Tasks.Task<stockService.getStockImageByteByCodeResponse> getStockImageByteByCodeAsync(string theStockCode)
        {
            stockService.getStockImageByteByCodeRequest inValue = new stockService.getStockImageByteByCodeRequest();
            inValue.theStockCode = theStockCode;
            return ((stockService.ChinaStockWebServiceSoap)(this)).getStockImageByteByCodeAsync(inValue);
        }
        
        public System.Threading.Tasks.Task getStockImage_kByCodeAsync(string theStockCode, string theType)
        {
            return base.Channel.getStockImage_kByCodeAsync(theStockCode, theType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<stockService.getStockImage_kByteByCodeResponse> stockService.ChinaStockWebServiceSoap.getStockImage_kByteByCodeAsync(stockService.getStockImage_kByteByCodeRequest request)
        {
            return base.Channel.getStockImage_kByteByCodeAsync(request);
        }
        
        public System.Threading.Tasks.Task<stockService.getStockImage_kByteByCodeResponse> getStockImage_kByteByCodeAsync(string theStockCode, string theType)
        {
            stockService.getStockImage_kByteByCodeRequest inValue = new stockService.getStockImage_kByteByCodeRequest();
            inValue.theStockCode = theStockCode;
            inValue.theType = theType;
            return ((stockService.ChinaStockWebServiceSoap)(this)).getStockImage_kByteByCodeAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<string[]> getStockInfoByCodeAsync(string theStockCode)
        {
            return base.Channel.getStockInfoByCodeAsync(theStockCode);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ChinaStockWebServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ChinaStockWebServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ChinaStockWebServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ChinaStockWebServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://www.webxml.com.cn/WebServices/ChinaStockWebService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ChinaStockWebServiceSoap,
            
            ChinaStockWebServiceSoap12,
        }
    }
}
